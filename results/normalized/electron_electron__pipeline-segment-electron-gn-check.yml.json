{
  "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
  "tools": {
    "pinny": {
      "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
      "tool": "pinny",
      "summary": {
        "total_findings": 2,
        "by_rule": {
          "unpinned-github-actions": 2
        }
      },
      "findings": [
        {
          "rule": "unpinned-github-actions",
          "pinned": "uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683",
          "line": 43,
          "capability": "pinning-check"
        },
        {
          "rule": "unpinned-github-actions",
          "pinned": "uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683",
          "line": 108,
          "capability": "pinning-check"
        }
      ]
    },
    "semgrep": {
      "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
      "tool": "semgrep",
      "summary": {
        "total_findings": 2,
        "by_rule": {
          "run-shell-injection": 2
        }
      },
      "findings": [
        {
          "rule": "run-shell-injection",
          "line": 94,
          "code": "requires login",
          "note": "Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".",
          "documentation": null,
          "capability": "injection-check"
        },
        {
          "rule": "run-shell-injection",
          "line": 126,
          "code": "requires login",
          "note": "Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".",
          "documentation": null,
          "capability": "injection-check"
        }
      ]
    },
    "scorecard": {
      "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
      "tool": "scorecard",
      "summary": {
        "total_findings": 2,
        "by_rule": {
          "SAST": 1,
          "Token-Permissions": 1
        }
      },
      "findings": [
        {
          "rule": "SAST",
          "score": 0,
          "reason": "no SAST tool detected",
          "lines": [],
          "raw_details": [
            "Warn: no pull requests merged into dev branch"
          ],
          "documentation": {
            "url": "https://github.com/ossf/scorecard/blob/ab2f6e92482462fe66246d9e32f642855a691dc1/docs/checks.md#sast",
            "short": "Determines if the project uses static code analysis."
          },
          "capability": "automatic-hardening-check"
        },
        {
          "rule": "Token-Permissions",
          "score": 0,
          "reason": "detected GitHub workflow tokens with excessive permissions",
          "lines": [
            1
          ],
          "raw_details": [
            "Warn: no topLevel permission defined: .github/workflows/electron_electron__pipeline-segment-electron-gn-check.yml:1",
            "Info: no jobLevel write permissions found"
          ],
          "documentation": {
            "url": "https://github.com/ossf/scorecard/blob/ab2f6e92482462fe66246d9e32f642855a691dc1/docs/checks.md#token-permissions",
            "short": "Determines if the project's workflows follow the principle of least privilege."
          },
          "capability": "permissions-check"
        }
      ]
    },
    "poutine": {
      "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
      "tool": "poutine",
      "summary": {
        "total_findings": 5,
        "by_rule": {
          "untrusted_checkout_exec": 5
        }
      },
      "findings": [
        {
          "rule_id": "untrusted_checkout_exec",
          "line": "72",
          "column": "",
          "job": "",
          "step": "",
          "details": "Detected usage of a Local GitHub Action at path: `./src/electron/.github/actions/install-build-tools`",
          "event_triggers": [
            "workflow_call"
          ],
          "capability": "artifact-Integrity-check"
        },
        {
          "rule_id": "untrusted_checkout_exec",
          "line": "120",
          "column": "",
          "job": "",
          "step": "",
          "details": "Detected usage of a Local GitHub Action at path: `./src/electron/.github/actions/install-dependencies`",
          "event_triggers": [
            "workflow_call"
          ],
          "capability": "artifact-Integrity-check"
        },
        {
          "rule_id": "untrusted_checkout_exec",
          "line": "90",
          "column": "",
          "job": "",
          "step": "",
          "details": "Detected usage of a Local GitHub Action at path: `./src/electron/.github/actions/restore-cache-aks`",
          "event_triggers": [
            "workflow_call"
          ],
          "capability": "artifact-Integrity-check"
        },
        {
          "rule_id": "untrusted_checkout_exec",
          "line": "85",
          "column": "",
          "job": "",
          "step": "",
          "details": "Detected usage of a Local GitHub Action at path: `./src/electron/.github/actions/restore-cache-azcopy`",
          "event_triggers": [
            "workflow_call"
          ],
          "capability": "artifact-Integrity-check"
        },
        {
          "rule_id": "untrusted_checkout_exec",
          "line": "70",
          "column": "",
          "job": "",
          "step": "",
          "details": "Detected usage of a Local GitHub Action at path: `./src/electron/.github/actions/set-chromium-cookie`",
          "event_triggers": [
            "workflow_call"
          ],
          "capability": "artifact-Integrity-check"
        }
      ]
    },
    "zizmor": {
      "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
      "tool": "zizmor",
      "summary": {
        "total_findings": 9,
        "by_rule": {
          "artipacked": 2,
          "template-injection": 7
        }
      },
      "findings": [
        {
          "rule_id": "artipacked",
          "level": "warning",
          "message": "credential persistence through GitHub Actions artifacts",
          "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
          "line": 46,
          "column": 7,
          "note": "audit confidence \u2192 Low",
          "capability": "artifact-Integrity-check"
        },
        {
          "rule_id": "artipacked",
          "level": "warning",
          "message": "credential persistence through GitHub Actions artifacts",
          "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
          "line": 113,
          "column": 7,
          "note": "audit confidence \u2192 Low",
          "capability": "artifact-Integrity-check"
        },
        {
          "rule_id": "template-injection",
          "level": "error",
          "message": "code injection via template expansion",
          "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
          "line": 93,
          "column": 7,
          "note": "audit confidence \u2192 Low",
          "capability": "injection-check"
        },
        {
          "rule_id": "template-injection",
          "level": "error",
          "message": "code injection via template expansion",
          "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
          "line": 93,
          "column": 7,
          "note": "audit confidence \u2192 Low",
          "capability": "injection-check"
        },
        {
          "rule_id": "template-injection",
          "level": "error",
          "message": "code injection via template expansion",
          "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
          "line": 125,
          "column": 7,
          "note": "audit confidence \u2192 Low",
          "capability": "injection-check"
        },
        {
          "rule_id": "template-injection",
          "level": "error",
          "message": "code injection via template expansion",
          "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
          "line": 125,
          "column": 7,
          "note": "audit confidence \u2192 Low",
          "capability": "injection-check"
        },
        {
          "rule_id": "template-injection",
          "level": "error",
          "message": "code injection via template expansion",
          "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
          "line": 125,
          "column": 7,
          "note": "audit confidence \u2192 Low",
          "capability": "injection-check"
        },
        {
          "rule_id": "template-injection",
          "level": "error",
          "message": "code injection via template expansion",
          "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
          "line": 125,
          "column": 7,
          "note": "audit confidence \u2192 Low",
          "capability": "injection-check"
        },
        {
          "rule_id": "template-injection",
          "level": "error",
          "message": "code injection via template expansion",
          "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
          "line": 125,
          "column": 7,
          "note": "audit confidence \u2192 Low",
          "capability": "injection-check"
        }
      ]
    },
    "actionlint": {
      "workflow": "electron_electron__pipeline-segment-electron-gn-check.yml",
      "tool": "actionlint",
      "summary": {
        "total_findings": 1
      },
      "findings": [
        {
          "line": 27,
          "column": 18,
          "message": "input \"gn-build-type\" of workflow_call event has the default value \"testing\", but it is also required. if an input is marked as required, its default value will never be used [events]",
          "capability": "workflow_structural_check"
        }
      ]
    }
  }
}