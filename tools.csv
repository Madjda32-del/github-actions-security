Tool Name,Github id,Github Repo,Paper Link,Purpose,Data
Cacheract,,https://github.com/adnanekhan/cacheract?tab=readme-ov-file#top,https://adnanthekhan.com/2024/05/06/the-monsters-in-your-build-cache-github-actions-cache-poisoning/,"The primary focus of the tool and the research is to demonstrate weaknesses in GitHub Actions caching. Specifically, it highlights how attackers can manipulate cache storage to inject malicious files, which are then automatically restored in future workflow runs. This can lead to executing arbitrary code inside workflows, stealing GitHub secrets or access tokens, and compromising build artifacts as part of a larger supply chain attack. The attack exploits GitHub's cache eviction process and the way cache keys are generated, showing how an attacker can anticipate or forcefully replace cached data.","Input Data: Workflows that use GitHub Actions caching, untrusted pull request execution, and cache keys that can be predicted; Output Data: A poisoned cache that replaces files in future workflow runs, allowing attackers to overwrite critical files like package.json, leading to potential remote code execution."
CodeQL,,https://github.com/github/codeql?tab=readme-ov-file#codeql,https://github.blog/security/application-security/how-to-secure-your-github-actions-workflows-with-codeql/#results,"The main goal of these new CodeQL capabilities is to identify and prevent vulnerabilities in GitHub Actions workflows by analyzing how untrusted data flows through workflows. Specifically, CodeQL can detect code injection risks, such as user-controlled input being used unsafely in a run command; track untrusted data sources, like workflow artifacts that could be manipulated by an attacker; and find workflow misconfigurations that might lead to privilege escalation or cache poisoning. This is especially important because many GitHub repositories unknowingly have insecure workflows that attackers could exploit.","Input Data: GitHub Actions workflow YAML files, Bash scripts, environment variables, GitHub event contexts (e.g., pull request metadata).Output Data: CodeQL generates alerts and reports that flag potential security issues, helping maintainers patch vulnerabilities before they are exploited."
Tmate,,https://github.com/mxschmitt/action-tmate,,"action-tmate is a GitHub Action designed to help users debug their workflows by allowing direct SSH access to the runner. It enables developers to inspect, troubleshoot, and fix issues interactively within their GitHub Actions environments. The tool provides an on-demand tmate session that can be accessed via SSH or a web-based terminal, making it easier to diagnose CI/CD failures without multiple commit attempts.","Input Data: GitHub Actions workflows running on Linux, macOS, or Windows, workflow jobs requiring debugging, user-defined settings like detached mode, timeout, or access control; Output Data: An interactive tmate session link for SSH or web access, real-time terminal access to inspect the environment, the ability to pause a workflow, execute commands, and manually debug before resuming or terminating the job."
poutine,,https://github.com/boostsecurityio/poutine,,"Poutine is a security scanner that detects misconfigurations and vulnerabilities in the build pipelines of a repository, supporting multiple CI/CD platforms including GitHub Actions and GitLab CI/CD.","Input Data: CI/CD workflow configurations, repositories from GitHub or GitLab, access tokens for security analysis. Output Data: Security reports highlighting misconfigurations, potential vulnerabilities, and policy violations."
Harden-Runner,,https://github.com/step-security/harden-runner,,"Harden-Runner enhances the security of CI/CD runners by monitoring and enforcing security policies. It prevents exfiltration of secrets, detects unauthorized modifications to source code, and monitors outbound network traffic. The tool helps bridge the security gap in ephemeral GitHub Actions runners by correlating security events with specific workflow runs.","Input Data: GitHub Actions workflows, CI/CD job execution, network traffic data, process execution logs. Output Data: Security insights, alerts on suspicious activity, enforcement of egress policies, and logs of CI/CD security events."
GitHub Actions Goat,,https://github.com/step-security/github-actions-goat,https://stepsecurity.io/blog/github-actions-goat-a-deliberately-vulnerable-github-actions-environment,"A deliberately vulnerable GitHub Actions CI/CD environment designed for educational and testing purposes. It simulates common vulnerabilities like secret leaks, privilege escalation, and untrusted input handling. Ideal for testing how tools respond to known flaws.","Input Data: Preconfigured vulnerable GitHub workflows, public repositories, educational CI/CD labs; Output Data: Security flaws surfaced during workflow runs, ideal for evaluating detection tools."
GitGuardian,,https://github.com/GitGuardian/ggshield,,"GitGuardian Shield GitHub Action scans code and workflows for hardcoded secrets and sensitive information. It acts as a secret detection layer within the CI/CD pipeline.","Input Data: Source code, configuration files, GitHub workflows; Output Data: Secret leak detections, security alerts within pull requests and workflow logs."
OpenSSF Scorecard,,https://github.com/ossf/scorecard,https://dl.acm.org/doi/pdf/10.1145/3714464,"OpenSSF Scorecard evaluates open-source projects on a set of automated security best practices, including those related to GitHub Actions (e.g., pinning actions, avoiding dangerous permissions). Useful to assess project hygiene and trustworthiness.","Input Data: GitHub repositories, dependency metadata, GitHub Actions workflows; Output Data: Scorecard ratings (0â€“10) on multiple dimensions like CI/CD usage, branch protection, dependency updates."
Argus,,https://github.com/jasonxtn/Argus,https://dl.acm.org/doi/pdf/10.1145/3664476.3664497,"Argus is a static analysis tool that detects security vulnerabilities in GitHub Actions workflows. It identifies insecure patterns such as untrusted 'uses:', unpinned actions, and secrets leakage risks. The tool was also used to create a large labeled dataset of vulnerable workflows.","Input Data: GitHub Actions workflows (.yml files); Output Data: Alerts about vulnerability patterns, labels for security smells, dataset of 7,640 confirmed vulnerable workflows."
actionlint,,https://github.com/rhysd/actionlint,https://dl.acm.org/doi/pdf/10.1145/3664476.3664497, "actionlint is a static linter for GitHub Actions workflow files. It checks for syntax correctness, invalid keys, and common configuration issues that might silently break workflows or create insecure behavior.","Input Data: GitHub Actions YAML files; Output Data: Syntax and structure validation errors, warning messages to help fix misconfigurations."
kntrl,,https://github.com/kondukto-io/kntrl,,,
bullfrog,,https://github.com/bullfrogsec/bullfrog,,,
GHAST,,https://github.com/Mobile-IoT-Security-Lab/GHAST,https://binlin.info/downloads/Huang2025a.pdf,"Static analyzer for GitHub Actions YAML with security rules (e.g., unpinned actions, secret leaks)","Input: Workflow YAMLs; Output: Security alerts for insecure workflow practices"
Secure-repo,,https://github.com/step-security/secure-repo,,"Audits workflows and repository settings for security misconfigurations","Input: GitHub repo; Output: Security misconfiguration report for workflow and repo settings"
Scharf,,https://github.com/cybrota/scharf,,"Scans workflows for unpinned third-party GitHub Actions","Input: Workflow YAMLs; Output: List of unpinned 'uses:' entries"
Frizbee Action,,https://github.com/stacklok/frizbee-action,https://stacklok.com/blog/new-frizbee-features-and-a-github-action-to-automate-pinning-actions-and-container-images,"Pins GitHub Actions and Docker images in workflows","Input: Workflow YAMLs; Output: Suggestions or auto-pinning SHA references"
Pinny,,https://github.com/koalalab-inc/pinny,,"Automatically enforces version pinning in workflows","Input: Workflow YAMLs; Output: SHA-pinned versions for actions/images"
Bolt,,https://github.com/koalalab-inc/bolt,,"Applies GitHub Actions hardening policies (egress filtering, secret blocking)","Input: GitHub Actions workflow setup; Output: Runtime restrictions and hardening rules"
lotp,,https://github.com/boostsecurityio/lotp,,"Detects stealthy CI abuse patterns (Living Off The Pipeline)","Input: Workflow logic and execution history; Output: Alerts for suspicious behavior"
Cimon Action,,https://github.com/CycodeLabs/cimon-action,,"Monitors workflow behavior during runtime for suspicious activity","Input: Workflow runtime behavior; Output: Live threat detections"
zizmor,,https://github.com/woodruffw/zizmor/tree/main/src/audit,https://www.wiz.io/blog/github-actions-security-guide,,
Trivy Action,,https://github.com/aquasecurity/trivy-action,https://www.reddit.com/r/devops/comments/1ggehw8/are_there_any_free_github_actions_for_security/,,
GitHub Actions Log Checker,,https://github.com/latiotech/github-actions-log-checker,,,
Gato,,https://github.com/AdnaneKhan/Gato-X,,,
