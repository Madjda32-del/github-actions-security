name: Release

# TODO: run this only for the oracle/opengrok repository
on:
  release:
    types: [created]

jobs:
  get_tag:
    name: Get tag name
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Get the tag name
        id: get_tag
        env:
          OPENGROK_REF: ${{ github.ref }}
        run: ./dev/ref2tag.sh
  build:
    runs-on: ubuntu-latest
    needs: get_tag
    steps:
    - name: Checkout master branch
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Set up JDK
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
      with:
        distribution: 'oracle'
        java-version: '21'
    - name: Cache Maven packages
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Checkout Universal ctags
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        repository: universal-ctags/ctags
        path: ctags
    - name: Install pre-requisites
      run: ./dev/before_install
    - name: Before build actions
      run: ./dev/before
    - name: Build
      run: ./mvnw -DskipTests=true -Dmaven.javadoc.skip=false -B -V package
    - name: Get upload URL
      id: get_upload_url
      env:
        OPENGROK_TAG: ${{ needs.get_tag.outputs.tag }}
      run: dev/get_upload_url.sh
    - name: Upload release tarball
      id: upload-release-asset
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: ./distribution/target/opengrok-${{ needs.get_tag.outputs.tag }}.tar.gz
        asset_name: opengrok-${{ needs.get_tag.outputs.tag }}.tar.gz
        asset_content_type: application/octet-stream
