name: wpt_epoch
on:
schedule:
# Every night at 0:30 UTC. This is 20 minutes after `epochs/daily` branch is
# triggered to be created in WPT repo.
- cron: 30 0 * * *
workflow_dispatch:
jobs:
wpt:
name: wpt / ${{ matrix.os }} / ${{ matrix.deno-version }}
if: github.repository == 'denoland/deno'
runs-on: ${{ matrix.os }}
timeout-minutes: 30
strategy:
fail-fast: false
matrix:
deno-version: [v1.x, canary]
os: [ubuntu-24.04-xl]
steps:
- name: Clone repository
uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # actions/checkout@v4 | v4.2.2
with:
submodules: true
persist-credentials: false
- name: Setup Deno
uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # denoland/setup-deno@v2 | v2.0.3
with:
deno-version: ${{ matrix.deno-version }}
- name: Install Python
uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # actions/setup-python@v5 | v5.6.0
with:
python-version: '3.11'
- name: Log versions
run: |
python --version
deno --version
- name: Switch WPT submodule to epochs/daily
working-directory: tests/wpt/suite/
shell: bash
run: |
git remote set-branches origin '*'
git fetch origin
git checkout $(./wpt rev-list --epoch 1d)
git checkout -b epochs/daily
- name: Configure hosts file for WPT (unix)
if: runner.os != 'Windows'
working-directory: tests/wpt/suite/
run: ./wpt make-hosts-file | sudo tee -a /etc/hosts
- name: Configure hosts file for WPT (windows)
if: runner.os == 'Windows'
working-directory: tests/wpt/suite/
run: python wpt make-hosts-file | Out-File $env:SystemRoot\System32\drivers\etc\hosts -Encoding ascii -Append
- name: Run web platform tests
shell: bash
run: |
deno run -A --lock=tools/deno.lock.json --config=tests/config/deno.json \
./tests/wpt/wpt.ts setup
deno run -A --lock=tools/deno.lock.json --config=tests/config/deno.json \
./tests/wpt/wpt.ts run                                             \                                                \
--binary=$(which deno) --quiet --release --no-ignore --json=wpt.json --wptreport=wptreport.json --exit-zero
- name: Upload wpt results to wpt.fyi
env:
WPT_FYI_USER: deno
WPT_FYI_PW: ${{ secrets.WPT_FYI_PW }}
run: |
deno run -A --lock=tools/deno.lock.json ./tools/upload_wptfyi.js wptreport.json --from-raw-file --daily-run