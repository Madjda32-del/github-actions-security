{
  "workflow": "facebook_react__runtime_prereleases.yml",
  "tool": "semgrep",
  "summary": {
    "total_findings": 4,
    "by_rule": {
      "run-shell-injection": 4
    }
  },
  "findings": [
    {
      "rule": "run-shell-injection",
      "line": 76,
      "code": "requires login",
      "note": "Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".",
      "documentation": null
    },
    {
      "rule": "run-shell-injection",
      "line": 82,
      "code": "requires login",
      "note": "Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".",
      "documentation": null
    },
    {
      "rule": "run-shell-injection",
      "line": 91,
      "code": "requires login",
      "note": "Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".",
      "documentation": null
    },
    {
      "rule": "run-shell-injection",
      "line": 100,
      "code": "requires login",
      "note": "Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".",
      "documentation": null
    }
  ]
}